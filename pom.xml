<?xml version ="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <!-- pom 模型版本 -->
  <modelVersion>4.0.0</modelVersion>

  <!-- 项目信息 -->
  <groupId>com.kindustry</groupId> <!-- 项目唯一标识 -->
  <artifactId>mpl-platform-pom</artifactId> <!-- 项目名 -->
  <version>1.0</version> <!-- 版本 -->
  <packaging>pom</packaging> <!-- 打包方式 （pom,war,jar） -->
  <name>${project.artifactId}</name> <!-- 项目的名称， Maven 产生的文档用 -->
  <description>pom config project</description> <!-- 项目的描述, Maven 产生的文档用 -->

  <!-- 属性设置 -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- 编译字符编码为utf-8 -->
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <!-- 输出字符编码为UTF-8 -->
    <maven.compiler.encoding>UTF-8</maven.compiler.encoding>
    <!-- jdK版本 -->
    <java.version>1.8</java.version>
    <!--  本地jar目录   ${basedir}/../epl-parent-pom/lib -->
    <local.jar.dir>${basedir}/../mpl-platform-pom/lib</local.jar.dir>
    <!-- spring -->
    <spring.version>4.3.20.RELEASE</spring.version>
    <!-- Mybatis -->
    <mybatis.version>3.5.4</mybatis.version>
    <!-- Mybatis 整合 Spring -->
    <mybatis-spring.version>2.0.0</mybatis-spring.version>
    
    <!-- hibernate -->
    <hibernate.version>5.2.18.Final</hibernate.version>
    
    <!-- struts -->
    <struts.version>2.3.14</struts.version>
    
    <!--  AOP  -->
    <aspectj.version>1.9.2</aspectj.version>

    <!-- mysql 5.1.26 -->
    <mysql.version>8.0.16</mysql.version>
    <postgresql.version>42.1.1</postgresql.version>
    <!-- HikariCP 连接池 -->
    <hikariCP.version>3.3.1</hikariCP.version>

    <!-- logback+slf4j 日志文件管理包 -->
    <slf4j.version>1.7.5</slf4j.version>
    <logback.version>1.2.3</logback.version>
    <janino.version>3.0.10</janino.version>

    <!-- Json -->
    <jackson.version>2.7.4</jackson.version>

    <!-- Servlet -->
    <servlet.version>3.0.1</servlet.version>
    <jsp-api.version>2.2</jsp-api.version>
    <!-- jstl -->
    <jstl.version>1.2</jstl.version>
    <standard.version>1.1.2</standard.version>

    <!-- jboss client version -->
    <jboss.version>8.2.1.Final</jboss.version>
    
    <!-- excel poi 3.10.1 3.17 -->
    <poi.version>3.10.1</poi.version>
  </properties>

  <dependencies>
    <!-- PostgreSQL -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <!-- MyBatis Generator -->
    <dependency>
      <groupId>org.mybatis.generator</groupId>
      <artifactId>mybatis-generator-core</artifactId>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <!-- 配置项目依赖 -->
      <dependency>
        <groupId>com.kindustry</groupId>
        <artifactId>core</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.kindustry</groupId>
        <artifactId>jdbc</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>com.kindustry</groupId>
        <artifactId>etl</artifactId>
        <version>${project.version}</version>
      </dependency>
    
    
      <!--  本地jar Start -->
      <dependency>
        <groupId>db2jcc</groupId>
        <artifactId>db2jcc</artifactId>
        <version>1.1.1</version>
        <scope>system</scope>
        <!--本地jar的路径,相对或者绝对都可以-->
        <systemPath>${local.jar.dir}\db2jcc4.jar</systemPath>
      </dependency>

      <!-- 汉语拼音工具包   -->
      <dependency>
        <groupId>com.belerweb</groupId>
        <artifactId>pinyin4j</artifactId>
        <version>1.1.0</version>
        <scope>system</scope>
        <!--本地jar的路径,相对或者绝对都可以-->
        <systemPath>${local.jar.dir}\pinyin4j-1.1.0.jar</systemPath>
      </dependency>

      <!-- 判断文件编码格式   -->
      <dependency>
        <groupId>cpdetector</groupId>
        <artifactId>cpdetector</artifactId>
        <version>1.0.10</version>
        <scope>system</scope>
        <!--本地jar的路径,相对或者绝对都可以-->
        <systemPath>${local.jar.dir}\cpdetector_1.0.10.jar</systemPath>
      </dependency>

      <dependency>
        <groupId>jargs</groupId>
        <artifactId>jargs</artifactId>
        <version>1.0</version>
        <scope>system</scope>
        <!--本地jar的路径,相对或者绝对都可以-->
        <systemPath>${local.jar.dir}\jargs-1.0.jar</systemPath>
      </dependency>
      <!--  本地jar End -->
    
    
      
      
      
      <!-- Jboss client Start -->
      <dependency>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-ejb-client-bom</artifactId>
        <version>${jboss.version}</version>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.wildfly</groupId>
        <artifactId>wildfly-jms-client-bom</artifactId>
        <version>${jboss.version}</version>
        <type>pom</type>
      </dependency>
      <!-- Jboss client End -->

      <!-- Servlet AP 和 Java EE APIs Start -->
      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-api</artifactId>
        <version>8.0</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax</groupId>
        <artifactId>javaee-web-api</artifactId>
        <version>8.0</version>
        <scope>provided</scope>
      </dependency>

      <!-- Servlet Library -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.servlet.jsp</groupId>
        <artifactId>jsp-api</artifactId>
        <version>${jsp-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <!-- jstl -->
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>${jstl.version}</version>
      </dependency>
      <dependency>
        <groupId>taglibs</groupId>
        <artifactId>standard</artifactId>
        <version>${standard.version}</version>
      </dependency>

      <!-- 注解 -->
      <dependency>
        <groupId>javax.persistence</groupId>
        <artifactId>persistence-api</artifactId>
        <version>1.0</version>
        <scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>javax.activation</groupId>
        <artifactId>activation</artifactId>
        <version>1.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.4</version>
        <scope>provided</scope>
      </dependency>
      <!-- Servlet AP 和 Java EE APIs End -->



      <!-- DB Driver Start -->
      <!-- 导入Mysql数据库链接jar包 -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>
      <!-- PostgreSQL -->
      <dependency>
        <groupId>org.postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>
      <!-- DB2 -->
      <dependency>
        <groupId>com.ibm.db2.jcc</groupId>
        <artifactId>db2jcc</artifactId>
        <version>db2jcc4</version>
      </dependency>
      <!-- DB Driver End -->

      <!-- HikariCP 数据库连接池 -->
      <dependency>
        <groupId>com.zaxxer</groupId>
        <artifactId>HikariCP</artifactId>
        <version>${hikariCP.version}</version>
      </dependency>

      <!--  Struts2 -->
      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts2-core</artifactId>
        <version>${struts.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts2-convention-plugin</artifactId>
        <version>${struts.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.struts</groupId>
        <artifactId>struts2-spring-plugin</artifactId>
        <version>${struts.version}</version>
      </dependency>
       

      <!-- hibernate -->
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
      </dependency>
     

      <!-- Spring IOC 核心容器 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Spring 事物 模块 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Spring ORM 对象关系映射 模块 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Spring JDBC 模块 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Spring WEB MVC 模块 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency> 
        <groupId>org.springframework</groupId>
        <artifactId>spring-aspects</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Spring AOP 切面 模块 -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectj.version}</version>
      </dependency>

      <!--quartz任务调度 -->
      <dependency>
        <groupId>quartz</groupId>
        <artifactId>quartz</artifactId>
        <version>1.5.2</version>
      </dependency>

      <!-- mybatis核心包 -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>
      <!-- Mybatis 整合 Spring -->
      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>${mybatis-spring.version}</version>
      </dependency>



      <!-- JSON -->
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- 缓存 -->
      <dependency>
        <groupId>net.sf.ehcache</groupId>
        <artifactId>ehcache</artifactId>
        <version>2.8.9</version>
      </dependency>
      
      
      <!-- Java爬虫 解析html Start -->
      <!-- simulate web browser -->
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.6</version>
      </dependency>
      <!-- parse html -->
      <dependency>
        <groupId>org.htmlparser</groupId>
        <artifactId>htmlparser</artifactId>
        <version>2.1</version>
      </dependency>
      <!-- parse DOM -->
      <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>1.11.3</version>
      </dependency>
      <!-- parse javascript -->
      <dependency>
        <groupId>org.mozilla</groupId>
        <artifactId>rhino</artifactId>
        <version>1.7.10</version>
      </dependency>
      <!-- simulate client action -->
      <dependency>
        <groupId>net.sourceforge.htmlunit</groupId>
        <artifactId>htmlunit</artifactId>
        <version>2.33</version>
      </dependency>
      <!-- Java爬虫 解析html End -->

      <!-- java加密解密库 -->
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk16</artifactId>
        <version>1.46</version>
      </dependency>

      <!-- jasypt加解密密码 -->
      <dependency>
        <groupId>org.jasypt</groupId>
        <artifactId>jasypt</artifactId>
        <version>1.9.3</version>
      </dependency>
      

      <!-- commons 包 Start -->
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.11</version>
      </dependency>
      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>1.9.4</version>
      </dependency>
      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.4</version>
      </dependency>
      <!-- commons 包 End -->
      
      
      <!-- excel start -->
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi</artifactId>
        <version>${poi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.poi</groupId>
        <artifactId>poi-ooxml</artifactId>
        <version>${poi.version}</version>
      </dependency>
      <!-- excel end -->
      
      <!-- CSV  start  -->
      <dependency>
        <groupId>net.sf.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>1.8</version>
      </dependency>
      <!-- CSV  end  -->

      <!-- User-Agent 获取访问者设备信息 -->
      <dependency>
        <groupId>eu.bitwalker</groupId>
        <artifactId>UserAgentUtils</artifactId>
        <version>1.20</version>
      </dependency>
      
      
      <!-- 检测文本文件(字节流)的编码方式  -->
      <dependency>
        <groupId>net.sourceforge.jchardet</groupId>
        <artifactId>jchardet</artifactId>
        <version>1.0</version>
      </dependency>

      <dependency>
        <groupId>antlr</groupId>
        <artifactId>antlr</artifactId>
        <version>2.7.5</version>
      </dependency>
      <!-- 检测文本文件(字节流)的编码方式  -->
      
   
      <!-- 公式运算 -->
      <dependency>
        <groupId>commons-jexl</groupId>
        <artifactId>commons-jexl</artifactId>
        <version>1.1</version>
      </dependency>

      <!-- 利用icu4j检测文件的编码格式 -->
      <dependency>
        <groupId>com.ibm.icu</groupId>
        <artifactId>icu4j</artifactId>
        <version>67.1</version>
      </dependency>


      <!-- Socket  4.1.6.Final   3.10.6.Final  4.0.0.Final  -->
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-all</artifactId>
        <version>4.0.0.Final</version> 
      </dependency>
      
      <!--  SSH2  -->
      <dependency>
        <groupId>com.jcraft</groupId>
        <artifactId>jsch</artifactId>
        <version>0.1.55</version>
      </dependency>

      <!-- ftp start  -->
      <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-ftp</artifactId>
        <version>2.6.0</version>
      </dependency>
      <!-- ftp end  -->

      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-email</artifactId>
        <version>1.1</version>
      </dependency>

      <!-- Email -->
      <dependency>
        <groupId>javax.mail</groupId>
        <artifactId>mail</artifactId>
        <version>1.4.2</version>
      </dependency>
      

      <!-- 日志文件管理包 -->
      <!-- logback+slf4j start -->
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-access</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <!-- logback+slf4j end -->

      <!-- 日志文件管理包-提高性能log输出性能 -->
      <!-- janino -->
      <dependency>
        <groupId>org.codehaus.janino</groupId>
        <artifactId>commons-compiler</artifactId>
        <version>${janino.version}</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.janino</groupId>
        <artifactId>janino</artifactId>
        <version>${janino.version}</version>
      </dependency>


      <!-- 单元测试 -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
        <scope>test</scope>
      </dependency>
      
      <!-- MyBatis Generator -->
      <dependency>
        <groupId>org.mybatis.generator</groupId>
        <artifactId>mybatis-generator-core</artifactId>
        <version>1.3.5</version>
      </dependency>

    </dependencies>

  </dependencyManagement>

  
  

  <build>
    <defaultGoal>compile</defaultGoal>
    <pluginManagement>
      <plugins>
        <!-- compiler插件, 设定JDK版本 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
            <showWarnings>true</showWarnings>
            <compilerArguments>
              <extdirs>src\main\webapp\WEB-INF\lib</extdirs>
            </compilerArguments>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>2.3</version>
          <configuration>
            <ejbVersion>3.1</ejbVersion>
          </configuration>
        </plugin>

        <!-- Maven dependency 插件 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
        </plugin>

        <!-- shade插件配置 -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.4.3</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <transformers>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <!-- 我练习的JavaSE部分的spring，所有这里配置了主类，你们如果需要也可有换成你们自己的主类的路径 -->
                    <mainClass></mainClass>
                  </transformer>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/spring.schemas</resource>
                  </transformer>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                    <resource>META-INF/spring.handlers</resource>
                  </transformer>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- JBoss deploy plugin: mvn wildfly:deploy -->
        <plugin>
          <groupId>org.wildfly.plugins</groupId>
          <artifactId>wildfly-maven-plugin</artifactId>
          <version>2.0.2.Final</version>
          <configuration>
            <hostname>192.168.211.128</hostname>
            <port>9990</port>
            <username>admin</username>
            <password>admin</password>
          </configuration>
        </plugin>
        
        <!-- tomcat:run plugin -->
        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>2.2</version>
          <configuration>
            <!-- http port --> 
            <port>9090</port> 
            <!-- application path always starts with /--> 
            <path>/</path> 
            <contextReloadable>true</contextReloadable>
          </configuration>
        </plugin>
          
        <!-- Jetty 插件 -->
        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>9.4.7.v20180619</version>
          <configuration>
            <webAppConfig>
              <contextPath>/</contextPath>
            </webAppConfig>
            <scanIntervalSeconds>0</scanIntervalSeconds>
            <connectors>
              <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                <port>8080</port>
                <maxIdleTime>60000</maxIdleTime>
              </connector>
              <connector implementation="org.eclipse.jetty.server.ssl.SslSelectChannelConnector"> 
                <port>8443</port>
                <keystore>keystore</keystore>
                <keyPassword>123456</keyPassword> 
                <password>123456</password>
              </connector> 
            </connectors>
          </configuration>
        </plugin>
        
        <!-- MyBatis Generator -->
        <plugin>
          <groupId>org.mybatis.generator</groupId>
          <artifactId>mybatis-generator-maven-plugin</artifactId>
          <version>1.3.2</version>
          <configuration>
            <!-- 加载mybatis用于生成代码的配置文件，这个文件要在这个路径下 -->
            <configurationFile>src/main/resources/MybatisGeneratorConfig.xml</configurationFile>
            <verbose>true</verbose>
            <overwrite>true</overwrite>
          </configuration>
        </plugin>
        
      </plugins>
    </pluginManagement>
  </build>

</project>
